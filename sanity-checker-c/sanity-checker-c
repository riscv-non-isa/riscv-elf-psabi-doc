#!/bin/sh

set -u

if [ $# -lt 2 ] || [ $# -gt 3 ] || [ "${1}" = '--help' ]; then
  echo "Usage: $0 [target] [cc] [path/to/sysroot]"
  echo ""
  echo "  [target]          RISC-V Target. Supported Values:"
  echo "                    - riscv32-unknown-elf"
  echo "                    - riscv64-unknown-elf"
  echo "                    - riscv32-unknown-linux-gnu"
  echo "                    - riscv64-unknown-linux-gnu"
  echo ""
  echo "  [cc]              C compiler to check."
  echo ""
  echo "  [path/to/sysroot] Multilib Sysroot to Check. Optional if your C"
  echo "                    compiler will find the right sysroot."
  echo ""
  echo "If $0 detects the C compiler is clang, it will automatically add the"
  echo "--target argument."
  exit 2
fi;

script_dir=$(CDPATH='' cd -- "$(dirname -- "$0")" && pwd)

# Check [target] is valid
case "${1}" in
  "riscv32-unknown-elf"| \
  "riscv64-unknown-elf"| \
  "riscv32-unknown-linux-gnu"| \
  "riscv64-unknown-linux-gnu")
    target="${1}"
    ;;
  *)
    echo "Unsupported target. Available targets are:"
    echo "  - riscv32-unknown-elf"
    echo "  - riscv64-unknown-elf"
    echo "  - riscv32-unknown-linux-gnu"
    echo "  - riscv64-unknown-linux-gnu"
    exit 2
    ;;
esac

# Check [path/to/cc] is valid
cc="$(command -v "${2}")"
if [ -x "${cc}" ]; then
  echo "INFO: Using cc: '${cc}'"
else
  echo "CC argument: \"${cc}\" is not an executable."
  exit 2
fi

# Check [path/to/sysroot] is valid
sysroot="${3}"
if [ -z "${sysroot}" ]; then
  echo "INFO: Not adding '--sysroot' argument"
elif [ -d "${sysroot}" ]; then
  echo "INFO: Adding '--sysroot=${sysroot}' argument"
  cc="${cc} --sysroot=${sysroot}"
else
  echo "Sysroot argument: \"${sysroot}\" is not a directory."
  exit 2
fi;

# Check if $cc is clang
if ${cc} --version | grep -F -q -i "clang"; then
    echo "INFO: Detected cc is clang, adding --target=${target} argument"
    cc="${cc} --target=$target"
fi

checks_passing=$(( 0 ))
checks_failing=$(( 0 ))
checks_total=$(( 0 ))

check () {
  arch="${1}"
  abi="${2}"

  checks_total=$(( checks_total + 1 ))

  # All Errors are reported at compile-time, using _Static_assert (a C11 feature)
  if $cc -std=c11 -c \
      -o /dev/null 2>"errors-${arch}-${abi}.txt" \
      -I "${script_dir}" -I "${script_dir}/abis" \
      "-march=${arch}" "${script_dir}/archs/${arch}.c" \
      "-mabi=${abi}" -D "${abi}" -include "${script_dir}/abis/${abi}.h"; then
    echo "PASS: -march=${arch} -mabi=${abi}"
    checks_passing=$(( checks_passing + 1 ))
  else
    echo "FAIL: -march=${arch} -mabi=${abi}"
    checks_failing=$(( checks_failing + 1 ))
  fi;
}

summary_exit () {
  echo "INFO: Result ${checks_passing} Passing; ${checks_failing} Failing; ${checks_total} Total"
  if [ "${checks_failing}" -gt 0 ]; then
    exit 1;
  else
    exit 0;
  fi;
}

case "${target}" in
  riscv32*)
    # RISC-V 32, ILP32
    check rv32i ilp32
    check rv32ic ilp32
    check rv32im ilp32
    check rv32imc ilp32
    check rv32iac ilp32
    check rv32imac ilp32
    check rv32imafc ilp32
    check rv32imafdc ilp32
    check rv32gc ilp32

    # RISC-V 32, ILP32F
    case "${target}" in
      *-elf)
        check rv32imafc ilp32f
        check rv32imafdc ilp32f
        check rv32gc ilp32f
        ;;
      *-linux-gnu)
        # ILP32F is not supported with Linux multilib
        ;;
    esac

    # RISC-V 32, ILP32D
    check rv32imafdc ilp32d
    check rv32gc ilp32d

    # RISC-V 32, ILP32E
    check rv32i ilp32e
    check rv32ic ilp32e
    check rv32im ilp32e
    check rv32imc ilp32e
    check rv32iac ilp32e
    check rv32imac ilp32e
    check rv32imafc ilp32e
    check rv32imafdc ilp32e
    check rv32gc ilp32e
    ;;
  riscv64-*)
    # RISC-V 64, LP64
    check rv64imac lp64
    check rv64imafdc lp64
    check rv64gc lp64

    # RISC-V 64, LP64F
    case "${target}" in
      *-elf)
        check rv64imafdc lp64f
        check rv64gc lp64f
        ;;
      *-linux-gnu)
        # LP64F is not supported with Linux multilib
        ;;
    esac

    # RISC-V 64, LP64D
    check rv64imafdc lp64d
    check rv64gc lp64d
    ;;
esac

echo "INFO: Testing Complete"
summary_exit
